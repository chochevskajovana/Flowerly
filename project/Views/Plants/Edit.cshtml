@model project.Models.Plant

@{
    ViewBag.Title = "Edit";
}

<div class="card m-auto p-4 w-25 mulberry-color my-3">
    <h3 class="text-center">Edit @Model.Name</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div>
    <!-- <h4>Plant</h4> -->
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)


    @if (User.IsInRole("Administrator") || User.IsInRole("Salesman"))
    {
        <div class="form-group mb-2">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.PictureURL, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PictureURL, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
            @Html.ValidationMessageFor(model => model.PictureURL, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control w-100 h-50 fill-in", rows = "5" })
            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control w-100 h-50 fill-in", rows = "5" })
            @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    }

    @if (User.IsInRole("Administrator") || User.IsInRole("Warehouseman"))
    {
        <div class="form-group mb-2">
            @Html.LabelFor(model => model.NumInStock, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.NumInStock, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
            @Html.ValidationMessageFor(model => model.NumInStock, "", new { @class = "text-danger" })
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Available, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.Available, new { @class = "checkbox" })
        @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
    </div>

    <br />
    <div class="form-group">
        <div class="col text-center">
            <input type="submit" value="Save" class="btn btn-outline-danger" />
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-outline-secondary" })
        </div>
    </div>
</div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>