@model project.Models.Plant

@{
    ViewBag.Title = "Create";
}

<div class="card m-auto p-4 w-25 mt-2 mb-2">
    <h3 class="text-center mulberry-color">Create a new card </h3>
    <h4 class="text-center mulberry-color">with a new plant</h4>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
<div>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control fill-in" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.PictureURL, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.PictureURL, new { htmlAttributes = new { @class = "form-control fill-in" } })
        @Html.ValidationMessageFor(model => model.PictureURL, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-2">
        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control w-100 h-50 fill-in", rows = "2" })
        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-2">
        @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control w-100 h-50 fill-in", rows = "3" })
        @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-2">
        @Html.LabelFor(model => model.NumInStock, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.NumInStock, new { htmlAttributes = new { @class = "form-control w-100 fill-in" } })
        @Html.ValidationMessageFor(model => model.NumInStock, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Available, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.Available, new { @class = "checkbox" })
        @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="form-group">
        <div class="col text-center">
            <input type="submit" value="Create" class="btn btn-outline-danger" />
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-outline-secondary" })
        </div>
    </div>

</div>
    }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

              
